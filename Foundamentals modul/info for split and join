
В JavaScript, методът reverse() работи само върху масиви. Ако имаш низ (стринг), трябва първо да го преобразуваш в масив, тъй като reverse() не
 може директно да обърне реда на символите в един низ.

Ето защо използваме комбинацията от split(), reverse(), и join():

split(''): Превръща низа в масив от символи.

Пример: "password" -> ["p", "a", "s", "s", "w", "o", "r", "d"]
reverse(): Обръща реда на елементите в масива.

Пример: ["p", "a", "s", "s", "w", "o", "r", "d"] -> ["d", "r", "o", "w", "s", "s", "a", "p"]
join(''): Превръща обърнатия масив обратно в низ.

Пример: ["d", "r", "o", "w", "s", "s", "a", "p"] -> "drowssap"
Ако се опиташ да използваш само reverse(), ще получиш грешка, защото методът може да се прилага само върху масиви, а не върху низове.

Защо не може да използваме само reverse()?
Низовете са неизменяеми обекти в JavaScript, което означава, че не могат да се модифицират директно. 
Затова, за да обърнеш реда на символите в низ, първо трябва да го превърнеш в масив (с split()), след това да го обърнеш (с reverse()),
 и накрая да го върнеш обратно в низ (с join()).